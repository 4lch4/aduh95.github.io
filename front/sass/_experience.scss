$experience_transition_duration: 300ms;
$experience_longer_transition_duration: $experience_transition_duration + 50ms;

section.experience {
  // Capitalize only child time tag for languages that does not autocapitalize month names
  & ul,
  & details {
    padding-left: 2rem;
    margin-bottom: 0.5rem;
  }
  & ul > li time:first-child:last-child {
    display: inline-block;
    &::first-letter {
      text-transform: uppercase;
    }
  }

  & article {
    margin-top: 1rem;
    @media print {
      margin-top: initial;
    }
    @include media-breakpoint-down(sm) {
      &:not(:last-child)::after {
        content: "";
        display: block;
        border-top: 1px solid #aaa;
        margin: 1rem;
      }
    }
  }

  & details {
    &:hover {
      &[open] {
        will-change: height;
      }
      &:not([open]) p {
        will-change: font-size;
      }
    }
    transition: height #{$experience_transition_duration} ease-in;

    @media screen {
      i.fa {
        display: none;
      }
    }

    & > summary > span {
      display: block;
      margin-bottom: -1.5rem;
      margin-left: 1rem;
      transform: translateY(-1.5rem);

      cursor: pointer;
      font-style: italic;

      opacity: 1;
      transition: opacity #{$experience_transition_duration} ease-in;

      text-decoration: underline;
      // text-decoration-style: dotted;
      // text-underline-position: under;
      text-decoration-skip: ink;
    }

    // Styling open details elements
    &[open] {
      & > summary {
        float: left;

        & > span {
          // I don't use transition to avoid weird font-size change
          animation: fadeOutKeepingFontSize #{$experience_longer_transition_duration *
            0.4} ease-out;
          position: absolute;

          opacity: 0;
          font-size: 0;
          // 3rem =
          //        2rem (ul padding-left) +
          //        1rem (summary arrow)
          max-width: calc(100% - 3rem - #{$grid_gutter_width});
        }
      }

      & > p {
        animation: invisiblyGrowFontSize #{$experience_longer_transition_duration}
          ease-out;
        margin-left: 1rem;
        min-height: 1.5rem;
        text-align: justify;
      }

      @include media-breakpoint-down(sm) {
        // Transition on padding-left does not work on Safari
        // Plus it requires more ressources than translate animation
        animation: translate2linesX #{$experience_transition_duration} ease-in;
        padding-left: 0;
        & > summary span {
          // 5rem=
          //      2*1rem (body padding) +
          //      2rem (ul padding-right) +
          //      1rem (summary arrow)
          max-width: calc(100vw - 5rem);
        }
      }
    }
  }
}

@keyframes invisiblyGrowFontSize {
  0% {
    font-size: 0;
    opacity: 0;
  }
  40% {
    font-size: 0.5em;
    opacity: 0;
  }
  80% {
    opacity: 0.5;
    font-size: 1em;
  }
  100% {
    font-size: 1em;
    opacity: 1;
  }
}

@keyframes translate2linesX {
  0% {
    transform: translateX(2rem);
  }
  100% {
    transform: translateX(0rem);
  }
}

@keyframes fadeOutKeepingFontSize {
  0% {
    opacity: 1;
    font-size: 1rem;
  }
  100% {
    opacity: 0;
    font-size: 1rem;
  }
}
